export default [
    ["DownloadFile1", "{\"name\":\"DownloadFile1\",\"service\":[{\"name\":\"0-RequestDownload\",\"value\":52,\"input\":[{\"name\":\"Download File\",\"type\":\"downloadFile\"},{\"name\":\"addressAndLengthFormatIdentifier\",\"type\":\"input\",\"rule\":[{\"required\":true,\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"Please Input HEX Format\",\"trigger\":\"change\"},{\"min\":2,\"max\":2,\"message\":\"Length Need 1 Byte\",\"trigger\":\"change\"}]},{\"name\":\"memoryAddress\",\"type\":\"input\",\"rule\":[{\"required\":true,\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"Please Input HEX Format\",\"trigger\":\"change\"}]},{\"name\":\"memorySize\",\"type\":\"input\",\"rule\":[{\"required\":true,\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"Please Input HEX Format\",\"trigger\":\"change\"}]}]}],\"table\":[{\"type\":\"uds\",\"func\":\"if(readData[0]!=0x74){\\n  return false;\\n}\\n/*calculate bs*/\\nvar len = (readData[1] & 0xf0) >> 4;\\nif(len+2!=readData.length){\\n  return false;\\n}\\nvar bs=0;\\nfor (var i = 0; i < len; i++) {\\n  bs += readData[2 + i] * Math.pow(256, (len - 1 - i))\\n}\\nif(bs<=2){\\n  /*service number and blocknum*/\\n  return false;\\n}\\nbs-=2;\\n\\nthis.openFile(writeData[0]['Download File'].name,'r');\\n\\nvar payload=[];\\nvar bn=1;\\nvar size=parseInt(writeData[4].memorySize,16);\\nvar data;\\nif(size>bs){\\n  data=this.readFile(bs);\\n  if(data.length!=bs){\\n    this.log(\\\"file no enough data\\\");\\n    return false;\\n  }\\n  size-=bs;\\n}else{\\n  data=this.readFile(size);\\n  if(data.length!=size){\\n    this.log(\\\"file no enough data\\\");\\n    return false;\\n  }\\n  size=0;\\n}\\npayload.push({\\n  type:\\\"number\\\",\\n  name:'blockNum',\\n  blockNum:bn,\\n});\\npayload.push({\\n  type:\\\"input\\\",\\n  name:'data',\\n  data:data,\\n});\\nvar check=(writeData,readData)=>{\\n  if(writeData[0].blockNum!=readData[1]){\\n    return false;\\n  }\\n  if(size==0){\\n    this.insertItem(0x37,[]);\\n    this.closeFile()\\n  }else{\\n    if(size>bs){\\n      data=this.readFile(bs);\\n      if(data.length!=bs){\\n        this.log(\\\"file no enough data\\\");\\n        return false;\\n      }\\n      size-=bs;\\n    }else{\\n      data=this.readFile(size);\\n      if(data.length!=size){\\n        this.log(\\\"file no enough data\\\");\\n        return false;\\n      }\\n      size=0;\\n    }\\n    bn++;\\n    if(bn==256){\\n      bn=0;\\n    }\\n    payload=[]\\n    payload.push({\\n      type:\\\"number\\\",\\n      name:'blockNum',\\n      blockNum:bn,\\n    });\\n    payload.push({\\n      type:\\\"input\\\",\\n      name:'data',\\n      data:data,\\n    });\\n    this.insertItem(0x36,payload,check);\\n  }\\n  return true;\\n}\\nthis.insertItem(0x36,payload,check);\\nreturn true;\",\"service\":{\"name\":\"RequestDownload\",\"value\":52},\"payload\":[{\"type\":\"downloadFile\",\"name\":\"Download File\",\"Download File\":{\"name\":\"\",\"size\":839}},{\"type\":\"input\",\"name\":\"dataFormatIdentifier\",\"dataFormatIdentifier\":\"00\"},{\"type\":\"input\",\"name\":\"addressAndLengthFormatIdentifier\",\"addressAndLengthFormatIdentifier\":\"44\"},{\"type\":\"input\",\"name\":\"memoryAddress\",\"memoryAddress\":\"00000000\"},{\"type\":\"input\",\"name\":\"memorySize\",\"memorySize\":\"len($['Download File'].size,parseInt($['addressAndLengthFormatIdentifier'],16)&0xf)\"}],\"date\":1591327783898}]}"], ["UploadFile1", "{\"name\":\"UploadFile1\",\"service\":[{\"name\":\"0-RequestUpload\",\"value\":53,\"input\":[{\"name\":\"Upload File\",\"type\":\"uploadFile\"},{\"name\":\"addressAndLengthFormatIdentifier\",\"type\":\"input\",\"rule\":[{\"required\":true,\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"Please Input HEX Format\",\"trigger\":\"change\"},{\"min\":2,\"max\":2,\"message\":\"Length Need 1 Byte\",\"trigger\":\"change\"}]},{\"name\":\"memoryAddress\",\"type\":\"input\",\"rule\":[{\"required\":true,\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"Please Input HEX Format\",\"trigger\":\"change\"}]},{\"name\":\"memorySize\",\"type\":\"input\",\"rule\":[{\"required\":true,\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"Please Input HEX Format\",\"trigger\":\"change\"}]}]}],\"table\":[{\"type\":\"uds\",\"func\":\"if(readData[0]!=0x75){\\n  return false;\\n}\\n/*calculate bs*/\\nvar len = (readData[1] & 0xf0) >> 4;\\nif(len+2!=readData.length){\\n  return false;\\n}\\nvar bs=0;\\nfor (var i = 0; i < len; i++) {\\n  bs += readData[2 + i] * Math.pow(256, (len - 1 - i))\\n}\\nif(bs<=2){\\n  /*service number and blocknum*/\\n  return false;\\n}\\n\\n\\nthis.openFile(writeData[0]['Upload File'].name,'w+');\\n\\nvar payload=[];\\nvar bn=1;\\nvar size=parseInt(writeData[4].memorySize,16);\\n\\npayload.push({\\n  type:\\\"number\\\",\\n  name:'blockNum',\\n  blockNum:bn,\\n});\\n\\nvar check=(writeData,readData)=>{\\n  if(readData.length>bs){\\n    return false;\\n  }\\n  if(writeData[0].blockNum!=readData[1]){\\n    return false;\\n  }\\n  if(size>(readData.length-2)){\\n    this.writeFile(readData.slice(2));\\n    size-=(readData.length-2);\\n  }else{\\n    this.writeFile(readData.slice(2,2+size));\\n    size=0;\\n  }\\n\\n  if(size==0){\\n    this.insertItem(0x37,[]);\\n    this.closeFile()\\n  }else{\\n    bn++;\\n    if(bn==256){\\n      bn=0;\\n    }\\n    payload=[]\\n    payload.push({\\n      type:\\\"number\\\",\\n      name:'blockNum',\\n      blockNum:bn,\\n    });\\n    this.insertItem(0x36,payload,check);\\n  }\\n  return true;\\n}\\nthis.insertItem(0x36,payload,check);\\nreturn true;\",\"service\":{\"name\":\"RequestUpload\",\"value\":53},\"payload\":[{\"type\":\"uploadFile\",\"name\":\"Upload File\",\"Upload File\":{\"name\":\"\",\"size\":0}},{\"type\":\"input\",\"name\":\"dataFormatIdentifier\",\"dataFormatIdentifier\":\"00\"},{\"type\":\"input\",\"name\":\"addressAndLengthFormatIdentifier\",\"addressAndLengthFormatIdentifier\":\"44\"},{\"type\":\"input\",\"name\":\"memoryAddress\",\"memoryAddress\":\"00000000\"},{\"type\":\"input\",\"name\":\"memorySize\",\"memorySize\":\"00000011\"}],\"date\":1591327907008}]}"], ["addFile(0x38)", "{\"name\":\"addFile(0x38)\",\"service\":[{\"name\":\"0-RequestFileTransfer\",\"value\":56,\"input\":[{\"name\":\"Download File\",\"type\":\"downloadFile\"},{\"name\":\"filePathAndName\",\"type\":\"text\",\"rule\":[{\"required\":true},{\"min\":1}]},{\"name\":\"fileSizeParameterLength\",\"type\":\"input\",\"rule\":[{\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"Please Input HEX Format\",\"trigger\":\"change\"},{\"min\":2,\"max\":2,\"message\":\"Length Need 1 Byte\",\"trigger\":\"change\"}]},{\"name\":\"fileSizeUnCompressed\",\"type\":\"input\",\"rule\":[{\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"Please Input HEX Format\",\"trigger\":\"change\"}]}]}],\"table\":[{\"type\":\"uds\",\"func\":\"if((readData[0]!=0x78)||(readData[1]!=0x1)){\\n  return false;\\n}\\nvar bsLen=readData[2];\\nvar bs=0;\\nvar i;\\nfor(i=0;i<bsLen;i+=1){\\n\\tbs+=readData[3+i]*Math.pow(256,(bsLen-1-i));\\n}\\nbs-=2;\\n\\nthis.openFile(writeData[1]['Download File'].name,'r');\\nvar payload=[];\\nvar bn=1;\\nvar size=parseInt(writeData[7].fileSizeUnCompressed,16);\\nvar data;\\nif(size>bs){\\n  data=this.readFile(bs);\\n  if(data.length!=bs){\\n    this.log(\\\"file no enough data\\\");\\n    return false;\\n  }\\n  size-=bs;\\n}else{\\n  data=this.readFile(size);\\n  if(data.length!=size){\\n    this.log(\\\"file no enough data\\\");\\n    return false;\\n  }\\n  size=0;\\n}\\npayload.push({\\n  type:\\\"number\\\",\\n  name:'blockNum',\\n  blockNum:bn,\\n});\\npayload.push({\\n  type:\\\"input\\\",\\n  name:'data',\\n  data:data,\\n});\\nvar check=(writeData,readData)=>{\\n  if(writeData[0].blockNum!=readData[1]){\\n    return false;\\n  }\\n  if(size==0){\\n    this.insertItem(0x37,[]);\\n    this.closeFile();\\n  }else{\\n    if(size>bs){\\n      data=this.readFile(bs);\\n      if(data.length!=bs){\\n        this.log(\\\"file no enough data\\\");\\n        return false;\\n      }\\n      size-=bs;\\n    }else{\\n      data=this.readFile(size);\\n      if(data.length!=size){\\n        this.log(\\\"file no enough data\\\");\\n        return false;\\n      }\\n      size=0;\\n    }\\n    bn++;\\n    if(bn==256){\\n      bn=0;\\n    }\\n    payload=[];\\n    payload.push({\\n      type:\\\"number\\\",\\n      name:'blockNum',\\n      blockNum:bn,\\n    });\\n    payload.push({\\n      type:\\\"input\\\",\\n      name:'data',\\n      data:data,\\n    });\\n    this.insertItem(0x36,payload,check);\\n  }\\n  return true;\\n}\\nthis.insertItem(0x36,payload,check);\\nreturn true;\\n\",\"service\":{\"name\":\"RequestFileTransfer\",\"value\":56},\"payload\":[{\"type\":\"uploadFile\",\"name\":\"Upload File\",\"Upload File\":\"\"},{\"type\":\"downloadFile\",\"name\":\"Download File\",\"Download File\":\"\"},{\"type\":\"select\",\"name\":\"modeOfOperation\",\"modeOfOperation\":1},{\"type\":\"input\",\"name\":\"filePathAndNameLength\",\"filePathAndNameLength\":\"len($['filePathAndName'].length,2)\"},{\"type\":\"text\",\"name\":\"filePathAndName\",\"filePathAndName\":\"11\"},{\"type\":\"input\",\"name\":\"dataFormatIdentifier\",\"dataFormatIdentifier\":\"00\"},{\"type\":\"input\",\"name\":\"fileSizeParameterLength\",\"fileSizeParameterLength\":\"\"},{\"type\":\"input\",\"name\":\"fileSizeUnCompressed\",\"fileSizeUnCompressed\":\"len($['Download File'].size,parseInt($['fileSizeParameterLength'],16)&0xf)\"},{\"type\":\"input\",\"name\":\"fileSizeCompressed\",\"fileSizeCompressed\":\"equal($['fileSizeUnCompressed'])\"}],\"date\":1591328028543}]}"], ["replaceFile(0x38)", "{\"name\":\"replaceFile(0x38)\",\"service\":[{\"name\":\"0-RequestFileTransfer\",\"value\":56,\"input\":[{\"name\":\"Download File\",\"type\":\"downloadFile\"},{\"name\":\"filePathAndName\",\"type\":\"text\",\"rule\":[{\"required\":true},{\"min\":1}]},{\"name\":\"fileSizeParameterLength\",\"type\":\"input\",\"rule\":[{\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"Please Input HEX Format\",\"trigger\":\"change\"},{\"min\":2,\"max\":2,\"message\":\"Length Need 1 Byte\",\"trigger\":\"change\"}]},{\"name\":\"fileSizeUnCompressed\",\"type\":\"input\",\"rule\":[{\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"Please Input HEX Format\",\"trigger\":\"change\"}]}]}],\"table\":[{\"type\":\"uds\",\"func\":\"if((readData[0]!=0x78)||(readData[1]!=0x3)){\\n  return false;\\n}\\nvar bsLen=readData[2];\\nvar bs=0;\\nvar i;\\nfor(i=0;i<bsLen;i+=1){\\n\\tbs+=readData[3+i]*Math.pow(256,(bsLen-1-i));\\n}\\nbs-=2;\\n\\nthis.openFile(writeData[1]['Download File'].name,'r');\\nvar payload=[];\\nvar bn=1;\\nvar size=parseInt(writeData[7].fileSizeUnCompressed,16);\\nvar data;\\nif(size>bs){\\n  data=this.readFile(bs);\\n  if(data.length!=bs){\\n    this.log(\\\"file no enough data\\\");\\n    return false;\\n  }\\n  size-=bs;\\n}else{\\n  data=this.readFile(size);\\n  if(data.length!=size){\\n    this.log(\\\"file no enough data\\\");\\n    return false;\\n  }\\n  size=0;\\n}\\npayload.push({\\n  type:\\\"number\\\",\\n  name:'blockNum',\\n  blockNum:bn,\\n});\\npayload.push({\\n  type:\\\"input\\\",\\n  name:'data',\\n  data:data,\\n});\\nvar check=(writeData,readData)=>{\\n  if(writeData[0].blockNum!=readData[1]){\\n    return false;\\n  }\\n  if(size==0){\\n    this.insertItem(0x37,[]);\\n    this.closeFile();\\n  }else{\\n    if(size>bs){\\n      data=this.readFile(bs);\\n      if(data.length!=bs){\\n        this.log(\\\"file no enough data\\\");\\n        return false;\\n      }\\n      size-=bs;\\n    }else{\\n      data=this.readFile(size);\\n      if(data.length!=size){\\n        this.log(\\\"file no enough data\\\");\\n        return false;\\n      }\\n      size=0;\\n    }\\n    bn++;\\n    if(bn==256){\\n      bn=0;\\n    }\\n    payload=[];\\n    payload.push({\\n      type:\\\"number\\\",\\n      name:'blockNum',\\n      blockNum:bn,\\n    });\\n    payload.push({\\n      type:\\\"input\\\",\\n      name:'data',\\n      data:data,\\n    });\\n    this.insertItem(0x36,payload,check);\\n  }\\n  return true;\\n}\\nthis.insertItem(0x36,payload,check);\\nreturn true;\",\"service\":{\"name\":\"RequestFileTransfer\",\"value\":56},\"payload\":[{\"type\":\"uploadFile\",\"name\":\"Upload File\",\"Upload File\":\"\"},{\"type\":\"downloadFile\",\"name\":\"Download File\",\"Download File\":\"\"},{\"type\":\"select\",\"name\":\"modeOfOperation\",\"modeOfOperation\":3},{\"type\":\"input\",\"name\":\"filePathAndNameLength\",\"filePathAndNameLength\":\"len($['filePathAndName'].length,2)\"},{\"type\":\"text\",\"name\":\"filePathAndName\",\"filePathAndName\":\"11\"},{\"type\":\"input\",\"name\":\"dataFormatIdentifier\",\"dataFormatIdentifier\":\"00\"},{\"type\":\"input\",\"name\":\"fileSizeParameterLength\",\"fileSizeParameterLength\":\"\"},{\"type\":\"input\",\"name\":\"fileSizeUnCompressed\",\"fileSizeUnCompressed\":\"len($['Download File'].size,parseInt($['fileSizeParameterLength'],16)&0xf)\"},{\"type\":\"input\",\"name\":\"fileSizeCompressed\",\"fileSizeCompressed\":\"equal($['fileSizeUnCompressed'])\"}],\"date\":1591328283038}]}"], ["readFile(0x38)", "{\"name\":\"readFile(0x38)\",\"service\":[{\"name\":\"0-RequestFileTransfer\",\"value\":56,\"input\":[{\"name\":\"Upload File\",\"type\":\"uploadFile\"},{\"name\":\"filePathAndName\",\"type\":\"text\",\"rule\":[{\"required\":true},{\"min\":1}]}]}],\"table\":[{\"type\":\"uds\",\"func\":\"if((readData[0]!=0x78)||(readData[1]!=0x4)){\\n  return false;\\n}\\n/*calculate bs*/\\nvar bsLen = readData[2];\\n\\nvar bs=0;\\nvar i;\\nfor (i = 0; i < bsLen; i+=1) {\\n  bs += readData[3 + i] * Math.pow(256, (bsLen - 1 - i));\\n}\\nvar dataFormatIdentifier=readData[3+bsLen];\\nthis.log(\\\"dataFormatIdentifier:\\\"+dataFormatIdentifier);\\nvar fileLen=readData[4+bsLen]*256+readData[5+bsLen];\\nvar size=0;\\nfor (i = 0; i < fileLen; i+=1) {\\n  size += readData[6+bsLen + i] * Math.pow(256, (fileLen - 1 - i));\\n}\\nthis.log(\\\"upload file compressed size:\\\"+size);\\nsize=0;\\nfor (i = 0; i < fileLen; i+=1) {\\n  size += readData[6+bsLen+fileLen + i] * Math.pow(256, (fileLen - 1 - i));\\n}\\nthis.log(\\\"upload file uncompressed size:\\\"+size);\\n\\nthis.openFile(writeData[0]['Upload File'].name,'w+');\\n\\nvar payload=[];\\nvar bn=1;\\n\\npayload.push({\\n  type:\\\"number\\\",\\n  name:'blockNum',\\n  blockNum:bn,\\n});\\n\\nvar check=(writeData,readData)=>{\\n  if(readData.length>bs){\\n    return false;\\n  }\\n  if(writeData[0].blockNum!=readData[1]){\\n    return false;\\n  }\\n  if(size>(readData.length-2)){\\n    this.writeFile(readData.slice(2));\\n    size-=(readData.length-2);\\n  }else{\\n    this.writeFile(readData.slice(2,2+size));\\n    size=0;\\n  }\\n\\n  if(size==0){\\n    this.insertItem(0x37,[]);\\n    this.closeFile()\\n  }else{\\n    bn++;\\n    if(bn==256){\\n      bn=0;\\n    }\\n    payload=[]\\n    payload.push({\\n      type:\\\"number\\\",\\n      name:'blockNum',\\n      blockNum:bn,\\n    });\\n    this.insertItem(0x36,payload,check);\\n  }\\n  return true;\\n}\\nthis.insertItem(0x36,payload,check);\\nreturn true;\",\"service\":{\"name\":\"RequestFileTransfer\",\"value\":56},\"payload\":[{\"type\":\"uploadFile\",\"name\":\"Upload File\",\"Upload File\":{\"name\":\"\",\"size\":0}},{\"type\":\"downloadFile\",\"name\":\"Download File\",\"Download File\":\"\"},{\"type\":\"select\",\"name\":\"modeOfOperation\",\"modeOfOperation\":4},{\"type\":\"input\",\"name\":\"filePathAndNameLength\",\"filePathAndNameLength\":\"len($['filePathAndName'].length,2)\"},{\"type\":\"text\",\"name\":\"filePathAndName\",\"filePathAndName\":\"11\"},{\"type\":\"input\",\"name\":\"dataFormatIdentifier\",\"dataFormatIdentifier\":\"00\"},{\"type\":\"input\",\"name\":\"fileSizeParameterLength\",\"fileSizeParameterLength\":\"\"},{\"type\":\"input\",\"name\":\"fileSizeUnCompressed\",\"fileSizeUnCompressed\":\"\"},{\"type\":\"input\",\"name\":\"fileSizeCompressed\",\"fileSizeCompressed\":\"\"}],\"date\":1591328398877}]}"], ["deleteFile(0x38)", "{\"name\":\"deleteFile(0x38)\",\"service\":[{\"name\":\"0-RequestFileTransfer\",\"value\":56,\"input\":[{\"name\":\"filePathAndName\",\"type\":\"text\",\"rule\":[{\"required\":true},{\"min\":1}]}]}],\"table\":[{\"type\":\"uds\",\"func\":\"if((readData[0]!=0x78)||(readData[1]!=0x2)){\\n  return false;\\n}\\nreturn true;\",\"service\":{\"name\":\"RequestFileTransfer\",\"value\":56},\"payload\":[{\"type\":\"uploadFile\",\"name\":\"Upload File\",\"Upload File\":\"\"},{\"type\":\"downloadFile\",\"name\":\"Download File\",\"Download File\":\"\"},{\"type\":\"select\",\"name\":\"modeOfOperation\",\"modeOfOperation\":2},{\"type\":\"input\",\"name\":\"filePathAndNameLength\",\"filePathAndNameLength\":\"len($['filePathAndName'].length,2)\"},{\"type\":\"text\",\"name\":\"filePathAndName\",\"filePathAndName\":\"11\"},{\"type\":\"input\",\"name\":\"dataFormatIdentifier\",\"dataFormatIdentifier\":\"\"},{\"type\":\"input\",\"name\":\"fileSizeParameterLength\",\"fileSizeParameterLength\":\"\"},{\"type\":\"input\",\"name\":\"fileSizeUnCompressed\",\"fileSizeUnCompressed\":\"\"},{\"type\":\"input\",\"name\":\"fileSizeCompressed\",\"fileSizeCompressed\":\"\"}],\"date\":1591328525069}]}"], ["readDir(0x38)", "{\"name\":\"readDir(0x38)\",\"service\":[{\"name\":\"0-RequestFileTransfer\",\"value\":56,\"input\":[{\"name\":\"filePathAndName\",\"type\":\"text\",\"rule\":[{\"required\":true},{\"min\":1}]}]}],\"table\":[{\"type\":\"uds\",\"func\":\"if((readData[0]!=0x78)||(readData[1]!=0x5)){\\n  return false;\\n}\\n/*calculate bs*/\\nvar bsLen = readData[2];\\n\\nvar bs=0;\\nvar i;\\nfor (i = 0; i < bsLen; i+=1) {\\n  bs += readData[3 + i] * Math.pow(256, (bsLen - 1 - i));\\n}\\nvar dataFormatIdentifier=readData[3+bsLen];\\nthis.log(\\\"dataFormatIdentifier:\\\"+dataFormatIdentifier);\\nvar fileLen=readData[4+bsLen]*256+readData[5+bsLen];\\nvar size=0;\\nfor (i = 0; i < fileLen; i+=1) {\\n  size += readData[6+bsLen + i] * Math.pow(256, (fileLen - 1 - i));\\n}\\nthis.log(\\\"dir info size:\\\"+size);\\n\\n\\nvar dirInfo=[];\\n\\nvar payload=[];\\nvar bn=1;\\n\\npayload.push({\\n  type:\\\"number\\\",\\n  name:'blockNum',\\n  blockNum:bn,\\n});\\n\\nvar check=(writeData,readData)=>{\\n  if(readData.length>bs){\\n    return false;\\n  }\\n  if(writeData[0].blockNum!=readData[1]){\\n    return false;\\n  }\\n  if(size>(readData.length-2)){\\n    dirInfo=dirInfo.concat(readData.slice(2));\\n    size-=(readData.length-2);\\n  }else{\\n    dirInfo=dirInfo.concat(readData.slice(2,2+size));\\n    size=0;\\n  }\\n\\n  if(size==0){\\n    this.insertItem(0x37,[]);\\n    this.log(Buffer.from(dirInfo).toString('ascii'));\\n  }else{\\n    bn++;\\n    if(bn==256){\\n      bn=0;\\n    }\\n    payload=[]\\n    payload.push({\\n      type:\\\"number\\\",\\n      name:'blockNum',\\n      blockNum:bn,\\n    });\\n    this.insertItem(0x36,payload,check);\\n  }\\n  return true;\\n}\\nthis.insertItem(0x36,payload,check);\\nreturn true;\",\"service\":{\"name\":\"RequestFileTransfer\",\"value\":56},\"payload\":[{\"type\":\"uploadFile\",\"name\":\"Upload File\",\"Upload File\":\"\"},{\"type\":\"downloadFile\",\"name\":\"Download File\",\"Download File\":\"\"},{\"type\":\"select\",\"name\":\"modeOfOperation\",\"modeOfOperation\":5},{\"type\":\"input\",\"name\":\"filePathAndNameLength\",\"filePathAndNameLength\":\"len($['filePathAndName'].length,2)\"},{\"type\":\"text\",\"name\":\"filePathAndName\",\"filePathAndName\":\"11\"},{\"type\":\"input\",\"name\":\"dataFormatIdentifier\",\"dataFormatIdentifier\":\"\"},{\"type\":\"input\",\"name\":\"fileSizeParameterLength\",\"fileSizeParameterLength\":\"\"},{\"type\":\"input\",\"name\":\"fileSizeUnCompressed\",\"fileSizeUnCompressed\":\"\"},{\"type\":\"input\",\"name\":\"fileSizeCompressed\",\"fileSizeCompressed\":\"\"}],\"date\":1591328640453}]}"], ["DownloadLongArray1", "{\"name\":\"DownloadHse1\",\"service\":[{\"name\":\"0-RequestDownload\",\"value\":52,\"input\":[{\"name\":\"dataFormatIdentifier\",\"type\":\"input\",\"rule\":[{\"required\":true,\"pattern\":\"^([0-9a-fA-F]{2})?$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$\",\"message\":\"Please Input HEX Format\",\"trigger\":\"change\"}]},{\"name\":\"memoryAddress\",\"type\":\"input\",\"rule\":[{\"required\":true,\"pattern\":\"^([0-9a-fA-F]{2})+$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$\",\"message\":\"Please Input HEX Format\",\"trigger\":\"change\"}]}]}],\"table\":[{\"type\":\"uds\",\"func\":\"if(readData[0]!=0x74){\\n  return false;\\n}\\n/*calculate bs*/\\nvar len = (readData[1] & 0xf0) >> 4;\\nif(len+2!=readData.length){\\n  return false;\\n}\\n\\nvar bs=0;\\nfor (var i = 0; i < len; i++) {\\n  bs += readData[2 + i] * Math.pow(256, (len - 1 - i))\\n}\\nthis.log(bs);\\nif(bs<=2){\\n  /*service number and blocknum*/\\n  return false;\\n}\\nbs-=2;\\n\\nfunction readBuffer(buf,startpos,size){\\n    let retbuf=Buffer.alloc(size);\\n\\tif((buf.length-startpos)>size){\\n    \\tbuf.copy(retbuf,0,startpos,size+startpos);\\n    }else{\\n        buf.copy(retbuf,0,startpos,buf.length);\\n    }\\n    return retbuf\\n}\\n\\nvar pos=0;\\nvar hseData=this.get('hse');\\nthis.log(hseData);\\nvar payload=[];\\nvar bn=1;\\nvar size=parseInt(writeData[4].memorySize,16);\\nvar data;\\nif(size>bs){\\n  data=readBuffer(hseData,pos,bs);\\n  if(data.length!=bs){\\n    this.error(\\\"file no enough data\\\");\\n    return false;\\n  }\\n  size-=bs;\\n  pos+=bs;  \\n}else{\\n  data=readBuffer(hseData,pos,size);\\n  if(data.length!=size){\\n    this.error(\\\"file no enough data\\\");\\n    return false;\\n  }\\n  size=0;\\n  pos+=size;\\n}\\npayload.push({\\n  type:\\\"number\\\",\\n  name:'blockNum',\\n  blockNum:bn,\\n});\\npayload.push({\\n  type:\\\"input\\\",\\n  name:'data',\\n  data:data,\\n});\\nvar check=(writeData,readData)=>{\\n  if(writeData[0].blockNum!=readData[1]){\\n    return false;\\n  }\\n  if(size==0){\\n    this.insertItem(0x37,[]);\\n    this.set('hse',null);\\n  }else{\\n    if(size>bs){\\n      data=readBuffer(hseData,pos,bs);\\n      if(data.length!=bs){\\n        this.error(\\\"file no enough data\\\");\\n        return false;\\n      }\\n      size-=bs;\\n      pos+=bs;\\n    }else{\\n      data=readBuffer(hseData,pos,size);\\n      if(data.length!=size){\\n        this.error(\\\"file no enough data\\\");\\n        return false;\\n      }\\n      size=0;\\n      pos+=size;\\n    }\\n    bn++;\\n    if(bn==256){\\n      bn=0;\\n    }\\n    payload=[]\\n    payload.push({\\n      type:\\\"number\\\",\\n      name:'blockNum',\\n      blockNum:bn,\\n    });\\n    payload.push({\\n      type:\\\"input\\\",\\n      name:'data',\\n      data:data,\\n    });\\n    this.insertItem(0x36,payload,check);\\n  }\\n  return true;\\n}\\nthis.insertItem(0x36,payload,check);\\nreturn true;\",\"desc\":\"Import sym key.\",\"preFunc\":\"var offset=parseInt(writeData[3].memoryAddress,16);\\nvar symkey=Buffer.from(\\\"000102030405060708090a0b0c0d0e0f\\\",\\\"hex\\\");\\nvar keyInfo={\\n    keyFlags:this.HSE_KF_USAGE_ENCRYPT,\\n    keyCounter:0,\\n    smrFlags:this.HSE_KF_SMR_0,\\n    keyType:this.HSE_KEY_TYPE_AES\\n};\\nvar ret=this.importSymKey(offset,this.GET_KEY_HANDLE(this.HSE_KEY_CATALOG_ID_NVM,0,0),keyInfo,symkey);\\nvar memorySize=Buffer.alloc(4);\\nmemorySize.writeUInt32BE(ret.data.length,0);\\nwriteData[4].memorySize=memorySize.toString(\\\"hex\\\");\\nthis.set('hse',ret.data);\",\"service\":{\"name\":\"RequestDownload\",\"value\":52},\"payload\":[{\"type\":\"downloadFile\",\"name\":\"Download File\",\"Download File\":\"\"},{\"type\":\"input\",\"name\":\"dataFormatIdentifier\",\"dataFormatIdentifier\":\"00\"},{\"type\":\"input\",\"name\":\"addressAndLengthFormatIdentifier\",\"addressAndLengthFormatIdentifier\":\"44\"},{\"type\":\"input\",\"name\":\"memoryAddress\",\"memoryAddress\":\"20000000\"},{\"type\":\"input\",\"name\":\"memorySize\",\"memorySize\":\"01\"}]}]}"],
    ["UploadLongArray1", "{\"name\":\"UploadLongArray1\",\"service\":[{\"name\":\"0-RequestUpload\",\"value\":53,\"input\":[{\"name\":\"dataFormatIdentifier\",\"type\":\"input\",\"rule\":[{\"required\":true,\"pattern\":\"^([0-9a-fA-F]{2})?$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$\",\"message\":\"Please Input HEX Format\",\"trigger\":\"change\"}]},{\"name\":\"memoryAddress\",\"type\":\"input\",\"rule\":[{\"required\":true,\"pattern\":\"^([0-9a-fA-F]{2})+$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$\",\"message\":\"Please Input HEX Format\",\"trigger\":\"change\"}]},{\"name\":\"memorySize\",\"type\":\"input\",\"rule\":[{\"required\":true,\"pattern\":\"^([0-9a-fA-F]{2})+$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$|^(.*?)\\\\((.*?)\\\\)$\",\"message\":\"Please Input HEX Format\",\"trigger\":\"change\"}]}]}],\"table\":[{\"type\":\"uds\",\"func\":\"if(readData[0]!=0x75){\\n  return false;\\n}\\n/*calculate bs*/\\nvar len = (readData[1] & 0xf0) >> 4;\\nif(len+2!=readData.length){\\n  return false;\\n}\\nvar bs=0;\\nfor (var i = 0; i < len; i++) {\\n  bs += readData[2 + i] * Math.pow(256, (len - 1 - i))\\n}\\nif(bs<=2){\\n  /*service number and blocknum*/\\n  return false;\\n}\\n\\nvar allData=Buffer.alloc(0);\\n\\nfunction writeBuffer(buf,data=[]){\\n\\treturn Buffer.concat([buf,Buffer.from(data)]);\\n}\\n\\n\\n\\nvar payload=[];\\nvar bn=1;\\nvar size=parseInt(writeData[4].memorySize,16);\\n\\npayload.push({\\n  type:\\\"number\\\",\\n  name:'blockNum',\\n  blockNum:bn,\\n});\\n\\nvar check=(writeData,readData)=>{\\n  if(readData.length>bs){\\n    return false;\\n  }\\n  if(writeData[0].blockNum!=readData[1]){\\n    return false;\\n  }\\n  if(size>(readData.length-2)){\\n    allData=writeBuffer(allData,readData.slice(2));\\n    size-=(readData.length-2);\\n  }else{\\n    allData=writeBuffer(allData,readData.slice(2,2+size));\\n    size=0;\\n  }\\n\\n  if(size==0){\\n    this.insertItem(0x37,[]);\\n    this.set('hse',allData);\\n    this.log(allData);\\n  }else{\\n    bn++;\\n    if(bn==256){\\n      bn=0;\\n    }\\n    payload=[]\\n    payload.push({\\n      type:\\\"number\\\",\\n      name:'blockNum',\\n      blockNum:bn,\\n    });\\n    this.insertItem(0x36,payload,check);\\n  }\\n  return true;\\n}\\nthis.insertItem(0x36,payload,check);\\nreturn true;\",\"desc\":\"\",\"preFunc\":\"var size=parseInt(writeData[4].memorySize,16);\\nvar memorySize=Buffer.alloc(4);\\nmemorySize.writeUInt32BE(size,0);\\nwriteData[4].memorySize=memorySize.toString(\\\"hex\\\");\\n\",\"service\":{\"name\":\"RequestUpload\",\"value\":53},\"payload\":[{\"type\":\"uploadFile\",\"name\":\"Upload File\",\"Upload File\":\"\"},{\"type\":\"input\",\"name\":\"dataFormatIdentifier\",\"dataFormatIdentifier\":\"00\"},{\"type\":\"input\",\"name\":\"addressAndLengthFormatIdentifier\",\"addressAndLengthFormatIdentifier\":\"44\"},{\"type\":\"input\",\"name\":\"memoryAddress\",\"memoryAddress\":\"20000000\"},{\"type\":\"input\",\"name\":\"memorySize\",\"memorySize\":\"20\"}]}]}"]]
